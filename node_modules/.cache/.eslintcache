[{"/home/pournima/Desktop/projects-and-practies/React_Course/firstapp/src/index.js":"1","/home/pournima/Desktop/projects-and-practies/React_Course/firstapp/src/App.js":"2","/home/pournima/Desktop/projects-and-practies/React_Course/firstapp/src/reportWebVitals.js":"3","/home/pournima/Desktop/projects-and-practies/React_Course/firstapp/src/components/Navbar.js":"4","/home/pournima/Desktop/projects-and-practies/React_Course/firstapp/src/components/TextForm.js":"5","/home/pournima/Desktop/projects-and-practies/React_Course/firstapp/src/components/About.js":"6","/home/pournima/Desktop/projects-and-practies/React_Course/firstapp/src/components/Alert.js":"7","/home/pournima/Desktop/Pournima/src/index.js":"8","/home/pournima/Desktop/Pournima/src/reportWebVitals.js":"9","/home/pournima/Desktop/Pournima/src/App.js":"10","/home/pournima/Desktop/Pournima/src/components/TextForm.js":"11","/home/pournima/Desktop/Pournima/src/components/Navbar.js":"12","/home/pournima/Desktop/Pournima/src/components/Alert.js":"13"},{"size":289,"mtime":1640263238953,"results":"14","hashOfConfig":"15"},{"size":1990,"mtime":1640691259839,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1640261903980,"results":"17","hashOfConfig":"15"},{"size":2532,"mtime":1640691628997,"results":"18","hashOfConfig":"15"},{"size":2688,"mtime":1640597093144,"results":"19","hashOfConfig":"15"},{"size":4906,"mtime":1640503373730,"results":"20","hashOfConfig":"15"},{"size":446,"mtime":1640596690293,"results":"21","hashOfConfig":"15"},{"size":289,"mtime":1640263238953,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1640261903980,"results":"24","hashOfConfig":"23"},{"size":1957,"mtime":1640696415626,"results":"25","hashOfConfig":"23"},{"size":2688,"mtime":1640597093144,"results":"26","hashOfConfig":"23"},{"size":2532,"mtime":1640695908469,"results":"27","hashOfConfig":"23"},{"size":446,"mtime":1640596690293,"results":"28","hashOfConfig":"23"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1cyn6zu",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18j6gy1",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pournima/Desktop/projects-and-practies/React_Course/firstapp/src/index.js",[],["57","58"],"/home/pournima/Desktop/projects-and-practies/React_Course/firstapp/src/App.js",[],"/home/pournima/Desktop/projects-and-practies/React_Course/firstapp/src/reportWebVitals.js",[],"/home/pournima/Desktop/projects-and-practies/React_Course/firstapp/src/components/Navbar.js",["59","60"],"import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom';\n\nexport default function Navbar(props) {\n    return (\n        <div>\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n                <div className=\"container-fluid\">\n                    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n                            </li>\n                            {/* <li className=\"nav-item\">\n                                <Link className=\"nav-link active\" to=\"/about\">{props.AboutTitle}</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link active\" to=\"/\">{props.contactus}</Link>\n                            </li> */}\n                        </ul>\n                        {/* <form className=\"d-flex\">\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search..\" aria-label=\"Search\" />\n                            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\n                        </form> */}\n                        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n                                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode </label>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    AboutTitle: PropTypes.string.isRequired,\n}\n\nNavbar.defaultProps = {\n    title: \"Title HERE\",\n    AboutTitle: \"about HERE\",\n    contactus: \"contact HERE\"\n};","/home/pournima/Desktop/projects-and-practies/React_Course/firstapp/src/components/TextForm.js",[],"/home/pournima/Desktop/projects-and-practies/React_Course/firstapp/src/components/About.js",[],"/home/pournima/Desktop/projects-and-practies/React_Course/firstapp/src/components/Alert.js",[],"/home/pournima/Desktop/Pournima/src/index.js",[],"/home/pournima/Desktop/Pournima/src/reportWebVitals.js",[],"/home/pournima/Desktop/Pournima/src/App.js",[],"/home/pournima/Desktop/Pournima/src/components/TextForm.js",[],"/home/pournima/Desktop/Pournima/src/components/Navbar.js",["61","62"],"/home/pournima/Desktop/Pournima/src/components/Alert.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":10,"column":21,"nodeType":"69","endLine":10,"endColumn":58},{"ruleId":"67","severity":1,"message":"68","line":17,"column":33,"nodeType":"69","endLine":17,"endColumn":93},{"ruleId":"67","severity":1,"message":"68","line":10,"column":21,"nodeType":"69","endLine":10,"endColumn":58},{"ruleId":"67","severity":1,"message":"68","line":17,"column":33,"nodeType":"69","endLine":17,"endColumn":93},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]