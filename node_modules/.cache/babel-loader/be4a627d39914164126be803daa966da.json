{"ast":null,"code":"var _jsxFileName = \"/home/pournima/Desktop/projects-and-practies/React_Course/firstapp/src/components/TextForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n\n  const handelUpClick = () => {\n    let newtext = text.toUpperCase();\n    setText(newtext);\n    props.showAlert(\"Converted to uppercase!\", \"success\");\n  }; // this is for lowercase\n\n\n  const handellcClick = () => {\n    let newtext = text.toLowerCase();\n    setText(newtext);\n    props.showAlert(\"Converted to lowercase!\", \"success\");\n  }; // this is for clear\n\n\n  const handelclearClick = () => {\n    let newtext = '';\n    setText(newtext);\n    props.showAlert(\"Text Cleared!\", \"success\");\n  }; // this is for on click\n\n\n  const handelonChange = event => {\n    setText(event.target.value);\n  }; // this is for copy\n\n\n  const handelcopy = () => {\n    let text = document.getElementById(\"mybox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    props.showAlert(\"Copied to clipboard!\", \"success\");\n  }; // this is for remove extra spaces\n\n\n  const removeExtraSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Extra Spaces Removed!\", \"success\");\n  };\n\n  const [text, setText] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : '#042743'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          onChange: handelonChange,\n          style: {\n            backgroundColor: props.mode === 'dark' ? 'grey' : 'white',\n            color: props.mode === 'dark' ? 'white' : '#042743'\n          },\n          value: text,\n          id: \"mybox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: handelUpClick,\n        children: \"Convert To Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-info mx-1\",\n        onClick: handellcClick,\n        children: \"Convert To Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger mx-1\",\n        onClick: handelclearClick,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger mx-1\",\n        onClick: handelcopy,\n        children: \"Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger mx-1\",\n        onClick: removeExtraSpaces,\n        children: \"Remove spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-2\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : '#042743'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").length, \" Words And \", text.length, \" Characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(\" \").length, \" Minutes Read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Enter Something In The Text Box Above To Preview It Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TextForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = TextForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"sources":["/home/pournima/Desktop/projects-and-practies/React_Course/firstapp/src/components/TextForm.js"],"names":["React","useState","TextForm","props","handelUpClick","newtext","text","toUpperCase","setText","showAlert","handellcClick","toLowerCase","handelclearClick","handelonChange","event","target","value","handelcopy","document","getElementById","select","navigator","clipboard","writeText","removeExtraSpaces","newText","split","join","color","mode","heading","backgroundColor","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,QAAMC,aAAa,GAAG,MAAM;AACxB,QAAIC,OAAO,GAAGC,IAAI,CAACC,WAAL,EAAd;AACAC,IAAAA,OAAO,CAACH,OAAD,CAAP;AACAF,IAAAA,KAAK,CAACM,SAAN,CAAgB,yBAAhB,EAA0C,SAA1C;AACH,GAJD,CADoC,CAMpC;;;AACA,QAAMC,aAAa,GAAG,MAAM;AACxB,QAAIL,OAAO,GAAGC,IAAI,CAACK,WAAL,EAAd;AACAH,IAAAA,OAAO,CAACH,OAAD,CAAP;AACAF,IAAAA,KAAK,CAACM,SAAN,CAAgB,yBAAhB,EAA0C,SAA1C;AAEH,GALD,CAPoC,CAaxC;;;AACI,QAAMG,gBAAgB,GAAG,MAAM;AAC3B,QAAIP,OAAO,GAAG,EAAd;AACAG,IAAAA,OAAO,CAACH,OAAD,CAAP;AACAF,IAAAA,KAAK,CAACM,SAAN,CAAgB,eAAhB,EAAgC,SAAhC;AAEH,GALD,CAdoC,CAoBxC;;;AACI,QAAMI,cAAc,GAAIC,KAAD,IAAW;AAC9BN,IAAAA,OAAO,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACH,GAFD,CArBoC,CAwBxC;;;AACI,QAAMC,UAAU,GAAG,MAAK;AACpB,QAAIX,IAAI,GAAGY,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAX;AACAb,IAAAA,IAAI,CAACc,MAAL;AACAC,IAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BjB,IAAI,CAACU,KAAnC;AACAb,IAAAA,KAAK,CAACM,SAAN,CAAgB,sBAAhB,EAAuC,SAAvC;AAEH,GAND,CAzBoC,CAgCxC;;;AACI,QAAMe,iBAAiB,GAAG,MAAK;AAC3B,QAAIC,OAAO,GAAGnB,IAAI,CAACoB,KAAL,CAAW,MAAX,CAAd;AACAlB,IAAAA,OAAO,CAACiB,OAAO,CAACE,IAAR,CAAa,GAAb,CAAD,CAAP;AACAxB,IAAAA,KAAK,CAACM,SAAN,CAAgB,uBAAhB,EAAwC,SAAxC;AAEH,GALD;;AAQA,QAAM,CAACH,IAAD,EAAOE,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE;AAAC2B,QAAAA,KAAK,EAAEzB,KAAK,CAAC0B,IAAN,KAAa,MAAb,GAAoB,OAApB,GAA4B;AAApC,OAAlC;AAAA,8BACI;AAAA,kBAAK1B,KAAK,CAAC2B;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI;AAAU,UAAA,SAAS,EAAC,cAApB;AAAmC,UAAA,QAAQ,EAAEjB,cAA7C;AAA6D,UAAA,KAAK,EAAE;AAACkB,YAAAA,eAAe,EAAE5B,KAAK,CAAC0B,IAAN,KAAa,MAAb,GAAoB,MAApB,GAA2B,OAA7C;AAAqDD,YAAAA,KAAK,EAACzB,KAAK,CAAC0B,IAAN,KAAa,MAAb,GAAoB,OAApB,GAA4B;AAAvF,WAApE;AAAuK,UAAA,KAAK,EAAEvB,IAA9K;AAAoL,UAAA,EAAE,EAAC,OAAvL;AAA+L,UAAA,IAAI,EAAC;AAApM;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAEF,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAEM,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAEE,gBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAEK,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAEO,iBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,KAAK,EAAE;AAACI,QAAAA,KAAK,EAAEzB,KAAK,CAAC0B,IAAN,KAAa,MAAb,GAAoB,OAApB,GAA4B;AAApC,OAAvC;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,mBAAIvB,IAAI,CAACoB,KAAL,CAAW,GAAX,EAAgBM,MAApB,iBAAuC1B,IAAI,CAAC0B,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,mBAAI,QAAQ1B,IAAI,CAACoB,KAAL,CAAW,GAAX,EAAgBM,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,kBAAI1B,IAAI,CAAC0B,MAAL,GAAY,CAAZ,GAAc1B,IAAd,GAAmB;AAAvB;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA,kBADJ;AAuBH;;GAjEuBJ,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react'\n\n\nexport default function TextForm(props) {\n    const handelUpClick = () => {\n        let newtext = text.toUpperCase()\n        setText(newtext);\n        props.showAlert(\"Converted to uppercase!\",\"success\");\n    }\n    // this is for lowercase\n    const handellcClick = () => {\n        let newtext = text.toLowerCase()\n        setText(newtext);\n        props.showAlert(\"Converted to lowercase!\",\"success\");\n\n    }\n// this is for clear\n    const handelclearClick = () => {\n        let newtext = ''\n        setText(newtext);\n        props.showAlert(\"Text Cleared!\",\"success\");\n\n    }\n// this is for on click\n    const handelonChange = (event) => {\n        setText(event.target.value)\n    }\n// this is for copy\n    const handelcopy = () =>{\n        let text = document.getElementById(\"mybox\");\n        text.select();\n        navigator.clipboard.writeText(text.value);\n        props.showAlert(\"Copied to clipboard!\",\"success\");\n\n    }\n// this is for remove extra spaces\n    const removeExtraSpaces = () =>{\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"))\n        props.showAlert(\"Extra Spaces Removed!\",\"success\");\n\n    }\n\n\n    const [text, setText] = useState('');\n    return (\n        <>\n            <div className='container' style={{color :props.mode==='dark'?'white':'#042743'}} >\n                <h1>{props.heading}</h1>\n                <div className=\"mb-3\">\n                    <textarea className=\"form-control\" onChange={handelonChange} style={{backgroundColor :props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'#042743'}} value={text} id=\"mybox\" rows=\"8\"></textarea>\n                </div>\n                <button className=\"btn btn-primary mx-1\" onClick={handelUpClick}>Convert To Uppercase</button>\n                <button className=\"btn btn-info mx-1\" onClick={handellcClick}>Convert To Lowercase</button>\n                <button className=\"btn btn-danger mx-1\" onClick={handelclearClick}>Clear</button>\n                <button className=\"btn btn-danger mx-1\" onClick={handelcopy}>Copy</button>\n                <button className=\"btn btn-danger mx-1\" onClick={removeExtraSpaces}>Remove spaces</button>\n            </div>\n\n            <div className=\"container my-2\" style={{color :props.mode==='dark'?'white':'#042743'}}>\n                <h2>Your Text Summary</h2>\n                <p>{text.split(\" \").length} Words And {text.length} Characters</p>\n                <p>{0.008 * text.split(\" \").length} Minutes Read</p>\n                <h2>Preview</h2>\n                <p>{text.length>0?text:\"Enter Something In The Text Box Above To Preview It Here\"}</p>\n            </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}