{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","onChange","event","target","value","backgroundColor","rows","newtext","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","defaultProps","AboutTitle","contactus","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oMAIe,SAASA,EAAOC,GAC3B,OACI,8BACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACI,sBAAKD,UAAU,kBAAf,UACI,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACI,sBAAMJ,UAAU,0BAEpB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACI,oBAAIL,UAAU,kCAAd,SACI,oBAAIA,UAAU,WAAd,SACI,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBAaR,sBAAKF,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,SAA3E,UACI,uBAAOD,UAAU,mBAAmBM,QAASP,EAAMQ,WAAYH,KAAK,WAAWI,KAAK,SAASH,GAAG,2BAC5F,uBAAOL,UAAU,mBAAmBS,QAAQ,yBAA5C,4CC5BjB,SAASC,EAASX,GAC7B,IAqCA,EAAwBY,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACI,qCACI,sBAAKb,UAAU,YAAYc,MAAO,CAACC,MAAoB,SAAbhB,EAAME,KAAc,QAAQ,WAAtE,UACI,6BAAKF,EAAMiB,UACX,qBAAKhB,UAAU,OAAf,SACI,0BAAUA,UAAU,eAAeiB,SAxB5B,SAACC,GACpBL,EAAQK,EAAMC,OAAOC,QAuBoDN,MAAO,CAACO,gBAA8B,SAAbtB,EAAME,KAAc,OAAO,QAAQc,MAAmB,SAAbhB,EAAME,KAAc,QAAQ,WAAYmB,MAAOR,EAAMP,GAAG,QAAQiB,KAAK,QAExM,wBAAQtB,UAAU,uBAAuBM,QA7C/B,WAClB,IAAIiB,EAAUX,EAAKY,cACnBX,EAAQU,GACRxB,EAAM0B,UAAU,2BAA2B,aA0CnC,kCACA,wBAAQzB,UAAU,oBAAoBM,QAxC5B,WAClB,IAAIiB,EAAUX,EAAKc,cACnBb,EAAQU,GACRxB,EAAM0B,UAAU,2BAA2B,aAqCnC,kCACA,wBAAQzB,UAAU,sBAAsBM,QAlC3B,WAErBO,EADc,IAEdd,EAAM0B,UAAU,gBAAgB,aA+BxB,mBACA,wBAAQzB,UAAU,sBAAsBM,QAzBjC,WACf,IAAIM,EAAOe,SAASC,eAAe,SACnChB,EAAKiB,SACLC,UAAUC,UAAUC,UAAUpB,EAAKQ,OACnCrB,EAAM0B,UAAU,eAAe,aAqBvB,kBACA,wBAAQzB,UAAU,sBAAsBM,QAnB1B,WACtB,IAAI2B,EAAUrB,EAAKsB,MAAM,QACzBrB,EAAQoB,EAAQE,KAAK,MACrBpC,EAAM0B,UAAU,yBAAyB,aAgBjC,8BAGJ,sBAAKzB,UAAU,iBAAiBc,MAAO,CAACC,MAAoB,SAAbhB,EAAME,KAAc,QAAQ,WAA3E,UACI,mDACA,8BAAIW,EAAKsB,MAAM,KAAKE,OAApB,cAAuCxB,EAAKwB,OAA5C,iBACA,8BAAI,KAAQxB,EAAKsB,MAAM,KAAKE,OAA5B,mBACA,yCACA,4BAAIxB,EAAKwB,OAAO,EAAExB,EAAK,mEDhBvCd,EAAOuC,aAAe,CAClBlC,MAAO,aACPmC,WAAY,aACZC,UAAW,gBElCAC,MAZf,SAAezC,GAKX,OACIA,EAAM0C,OAAS,sBAAKzC,UAAS,sBAAiBD,EAAM0C,MAAMrC,KAA7B,gCAAiEI,KAAK,QAApF,UACX,iCANU,SAACkC,GACf,IAAMC,EAAQD,EAAKhB,cACnB,OAAOiB,EAAMC,OAAO,GAAGpB,cAAgBmB,EAAME,MAAM,GAItCC,CAAW/C,EAAM0C,MAAMrC,QAAgBL,EAAM0C,MAAMM,QC2DzDC,MAxDf,WACE,MAAwBrC,mBAAS,SAAjC,mBAAOV,EAAP,KAAagD,EAAb,KACA,EAA0BtC,mBAAS,MAAnC,mBAAO8B,EAAP,KAAcS,EAAd,KACMzB,EAAY,SAAC0B,EAAS/C,GAC1B8C,EAAS,CACPH,IAAKI,EACL/C,KAAMA,IAERgD,YAAW,WACTF,EAAS,QACR,OA0BL,OACE,qCAEE,cAACpD,EAAD,CAAQK,MAAM,aAAamC,WAAW,WAAWC,UAAU,aAAatC,KAAMA,EAAMM,WA1BrE,WACJ,UAATN,GACFgD,EAAQ,QACRtB,SAAS0B,KAAKvC,MAAMO,gBAAkB,UACtCI,EAAU,6BAA8B,YACxCE,SAASxB,MAAQ,2BAWjB8C,EAAQ,SACRtB,SAAS0B,KAAKvC,MAAMO,gBAAkB,QACtCI,EAAU,8BAA+B,YACzCE,SAASxB,MAAQ,8BASjB,cAAC,EAAD,CAAOsC,MAAOA,IACd,qBAAKzC,UAAU,iBAAf,SAME,cAACU,EAAD,CAAUe,UAAWA,EAAWT,QAAQ,kCAAkCf,KAAMA,UChDzEqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASC,eAAe,SAM1B0B,K","file":"static/js/main.c8069d43.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom';\n\nexport default function Navbar(props) {\n    return (\n        <div>\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n                <div className=\"container-fluid\">\n                    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n                            </li>\n                            {/* <li className=\"nav-item\">\n                                <Link className=\"nav-link active\" to=\"/about\">{props.AboutTitle}</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link active\" to=\"/\">{props.contactus}</Link>\n                            </li> */}\n                        </ul>\n                        {/* <form className=\"d-flex\">\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search..\" aria-label=\"Search\" />\n                            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\n                        </form> */}\n                        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n                                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode </label>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    AboutTitle: PropTypes.string.isRequired,\n}\n\nNavbar.defaultProps = {\n    title: \"Title HERE\",\n    AboutTitle: \"about HERE\",\n    contactus: \"contact HERE\"\n};","import React, { useState } from 'react'\n\n\nexport default function TextForm(props) {\n    const handelUpClick = () => {\n        let newtext = text.toUpperCase()\n        setText(newtext)\n        props.showAlert(\"Converted to UpperCase !\",\"success \")\n    }\n    // this is for lowercase\n    const handellcClick = () => {\n        let newtext = text.toLowerCase()\n        setText(newtext)\n        props.showAlert(\"Converted to Lowercase !\",\"success \")\n\n    }\n// this is for clear\n    const handelclearClick = () => {\n        let newtext = ''\n        setText(newtext)\n        props.showAlert(\"text Removed!\",\"success \")\n    }\n// this is for on click\n    const handelonChange = (event) => {\n        setText(event.target.value)\n    }\n// this is for copy\n    const handelcopy = () =>{\n        let text = document.getElementById(\"mybox\");\n        text.select();\n        navigator.clipboard.writeText(text.value)\n        props.showAlert(\"text copied!\",\"success \")\n    }\n// this is for remove extra spaces\n    const removeExtraSpaces = () =>{\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"))\n        props.showAlert(\"Removed Extra Spaces !\",\"success \")\n    }\n\n\n    const [text, setText] = useState('');\n    return (\n        <>\n            <div className='container' style={{color :props.mode==='dark'?'white':'#042743'}} >\n                <h1>{props.heading}</h1>\n                <div className=\"mb-3\">\n                    <textarea className=\"form-control\" onChange={handelonChange} style={{backgroundColor :props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'#042743'}} value={text} id=\"mybox\" rows=\"8\"></textarea>\n                </div>\n                <button className=\"btn btn-primary mx-1\" onClick={handelUpClick}>Convert To Uppercase</button>\n                <button className=\"btn btn-info mx-1\" onClick={handellcClick}>Convert To Lowercase</button>\n                <button className=\"btn btn-danger mx-1\" onClick={handelclearClick}>Clear</button>\n                <button className=\"btn btn-danger mx-1\" onClick={handelcopy}>Copy</button>\n                <button className=\"btn btn-danger mx-1\" onClick={removeExtraSpaces}>Remove spaces</button>\n            </div>\n\n            <div className=\"container my-2\" style={{color :props.mode==='dark'?'white':'#042743'}}>\n                <h2>Your Text Summary</h2>\n                <p>{text.split(\" \").length} Words And {text.length} Characters</p>\n                <p>{0.008 * text.split(\" \").length} Minutes Read</p>\n                <h2>Preview</h2>\n                <p>{text.length>0?text:\"Enter Something In The Text Box Above To Preview It Here\"}</p>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize =(word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{capitalize(props.alert.type)}</strong>{props.alert.msg}\n        </div>\n    )\n}\n\nexport default Alert","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light') // wheter dark mode is enable or not\n  const [alert, setAlert] = useState(null)\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode Has Been Enabled\", \"success \")\n      document.title = 'TextUtlies - Dark Mode'\n\n      // change title name after certain time \n      //   setInterval(() => {\n      //     document.title = 'Created By Rohit'\n      //   }, 1500);\n      //   setInterval(() => {\n      //     document.title = 'Created By Pournima'\n      //   }, 2000);\n    }\n    else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode Has Been Enabled\", \"success \")\n      document.title = 'TextUtlies - Light Mode'\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"Text-Utils\" AboutTitle=\"About Us\" contactus=\"Contact Us\" mode={mode} toggleMode={toggleMode} />\n      {/* <Navbar /> */}\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch> */}\n        {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n        {/* <Route exact path=\"/\"> */}\n        <TextForm showAlert={showAlert} heading=\"Enter The Text To Analyze Below\" mode={mode} />\n        {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}